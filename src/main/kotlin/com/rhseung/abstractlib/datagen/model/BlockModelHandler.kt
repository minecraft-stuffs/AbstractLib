package net.rhseung.rhseungslib.datagen.model

import com.rhseung.abstractlib.api.file.Location
import net.minecraft.block.Block
import net.minecraft.data.client.BlockStateModelGenerator
import net.minecraft.util.Identifier

class BlockModelHandler (
	val modId: String,
	val modelGenerator: BlockStateModelGenerator
) {
	object Parents {
		val CUBE = Location("block/cube")
		val CUBE_DIRECTIONAL = Location("block/cube_directional")
		val CUBE_ALL = Location("block/cube_all")
		val CUBE_MIRRORED_ALL = Location("block/cube_mirrored_all")
		val CUBE_NORTH_WEST_MIRRORED_ALL = Location("block/cube_north_west_mirrored_all")
		val CUBE_COLUMN_UV_LOCKED_X = Location("block/cube_column_uv_locked_x")
		val CUBE_COLUMN_UV_LOCKED_Y = Location("block/cube_column_uv_locked_y")
		val CUBE_COLUMN_UV_LOCKED_Z = Location("block/cube_column_uv_locked_z")
		val CUBE_COLUMN = Location("block/cube_column")
		val CUBE_COLUMN_HORIZONTAL = Location("block/cube_column_horizontal")
		val CUBE_COLUMN_MIRRORED = Location("block/cube_column_mirrored")
		val CUBE_TOP = Location("block/cube_top")
		val CUBE_BOTTOM_TOP = Location("block/cube_bottom_top")
		val ORIENTABLE = Location("block/orientable")
		val ORIENTABLE_WITH_BOTTOM = Location("block/orientable_with_bottom")
		val ORIENTABLE_VERTICAL = Location("block/orientable_vertical")
		val BUTTON = Location("block/button")
		val BUTTON_PRESSED = Location("block/button_pressed")
		val BUTTON_INVENTORY = Location("block/button_inventory")
		val DOOR_BOTTOM_LEFT = Location("block/door_bottom_left")
		val DOOR_BOTTOM_LEFT_OPEN = Location("block/door_bottom_left_open")
		val DOOR_BOTTOM_RIGHT = Location("block/door_bottom_right")
		val DOOR_BOTTOM_RIGHT_OPEN = Location("block/door_bottom_right_open")
		val DOOR_TOP_LEFT = Location("block/door_top_left")
		val DOOR_TOP_LEFT_OPEN = Location("block/door_top_left_open")
		val DOOR_TOP_RIGHT = Location("block/door_top_right")
		val DOOR_TOP_RIGHT_OPEN = Location("block/door_top_right_open")
		val CUSTOM_FENCE_POST = Location("block/custom_fence_post")
		val CUSTOM_FENCE_SIDE_NORTH = Location("block/custom_fence_side_north")
		val CUSTOM_FENCE_SIDE_EAST = Location("block/custom_fence_side_east")
		val CUSTOM_FENCE_SIDE_SOUTH = Location("block/custom_fence_side_south")
		val CUSTOM_FENCE_SIDE_WEST = Location("block/custom_fence_side_west")
		val CUSTOM_FENCE_INVENTORY = Location("block/custom_fence_inventory")
		val FENCE_POST = Location("block/fence_post")
		val FENCE_SIDE = Location("block/fence_side")
		val FENCE_INVENTORY = Location("block/fence_inventory")
		val TEMPLATE_WALL_POST = Location("block/template_wall_post")
		val TEMPLATE_WALL_SIDE = Location("block/template_wall_side")
		val TEMPLATE_WALL_SIDE_TALL = Location("block/template_wall_side_tall")
		val WALL_INVENTORY = Location("block/wall_inventory")
		val TEMPLATE_CUSTOM_FENCE_GATE = Location("block/template_custom_fence_gate")
		val TEMPLATE_CUSTOM_FENCE_GATE_OPEN = Location("block/template_custom_fence_gate_open")
		val TEMPLATE_CUSTOM_FENCE_GATE_WALL = Location("block/template_custom_fence_gate_wall")
		val TEMPLATE_CUSTOM_FENCE_GATE_WALL_OPEN = Location("block/template_custom_fence_gate_wall_open")
		val TEMPLATE_FENCE_GATE = Location("block/template_fence_gate")
		val TEMPLATE_FENCE_GATE_OPEN = Location("block/template_fence_gate_open")
		val TEMPLATE_FENCE_GATE_WALL = Location("block/template_fence_gate_wall")
		val TEMPLATE_FENCE_GATE_WALL_OPEN = Location("block/template_fence_gate_wall_open")
		val PRESSURE_PLATE_UP = Location("block/pressure_plate_up")
		val PRESSURE_PLATE_DOWN = Location("block/pressure_plate_down")
		val SLAB = Location("block/slab")
		val SLAB_TOP = Location("block/slab_top")
		val LEAVES = Location("block/leaves")
		val STAIRS = Location("block/stairs")
		val INNER_STAIRS = Location("block/inner_stairs")
		val OUTER_STAIRS = Location("block/outer_stairs")
		val TEMPLATE_TRAPDOOR_TOP = Location("block/template_trapdoor_top")
		val TEMPLATE_TRAPDOOR_BOTTOM = Location("block/template_trapdoor_bottom")
		val TEMPLATE_TRAPDOOR_OPEN = Location("block/template_trapdoor_open")
		val TEMPLATE_ORIENTABLE_TRAPDOOR_TOP = Location("block/template_orientable_trapdoor_top")
		val TEMPLATE_ORIENTABLE_TRAPDOOR_BOTTOM = Location("block/template_orientable_trapdoor_bottom")
		val TEMPLATE_ORIENTABLE_TRAPDOOR_OPEN = Location("block/template_orientable_trapdoor_open")
		val POINTED_DRIPSTONE = Location("block/pointed_dripstone")
		val CROSS = Location("block/cross")
		val TINTED_CROSS = Location("block/tinted_cross")
		val FLOWER_POT_CROSS = Location("block/flower_pot_cross")
		val TINTED_FLOWER_POT_CROSS = Location("block/tinted_flower_pot_cross")
		val RAIL_FLAT = Location("block/rail_flat")
		val RAIL_CURVED = Location("block/rail_curved")
		val TEMPLATE_RAIL_RAISED_NE = Location("block/template_rail_raised_ne")
		val TEMPLATE_RAIL_RAISED_SW = Location("block/template_rail_raised_sw")
		val CARPET = Location("block/carpet")
		val CORAL_FAN = Location("block/coral_fan")
		val CORAL_WALL_FAN = Location("block/coral_wall_fan")
		val TEMPLATE_GLAZED_TERRACOTTA = Location("block/template_glazed_terracotta")
		val TEMPLATE_CHORUS_FLOWER = Location("block/template_chorus_flower")
		val TEMPLATE_DAYLIGHT_DETECTOR = Location("block/template_daylight_detector")
		val TEMPLATE_GLASS_PANE_NOSIDE = Location("block/template_glass_pane_noside")
		val TEMPLATE_GLASS_PANE_NOSIDE_ALT = Location("block/template_glass_pane_noside_alt")
		val TEMPLATE_GLASS_PANE_POST = Location("block/template_glass_pane_post")
		val TEMPLATE_GLASS_PANE_SIDE = Location("block/template_glass_pane_side")
		val TEMPLATE_GLASS_PANE_SIDE_ALT = Location("block/template_glass_pane_side_alt")
		val TEMPLATE_COMMAND_BLOCK = Location("block/template_command_block")
		val TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_LEFT = Location("block/template_chiseled_bookshelf_slot_top_left")
		val TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_MID = Location("block/template_chiseled_bookshelf_slot_top_mid")
		val TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_RIGHT = Location("block/template_chiseled_bookshelf_slot_top_right")
		val TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT =
			Location("block/template_chiseled_bookshelf_slot_bottom_left")
		val TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_MID =
			Location("block/template_chiseled_bookshelf_slot_bottom_mid")
		val TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT =
			Location("block/template_chiseled_bookshelf_slot_bottom_right")
		val TEMPLATE_ANVIL = Location("block/template_anvil")
		val STEM_FRUIT = Location("block/stem_fruit")
		val CROP = Location("block/crop")
		val TEMPLATE_FARMLAND = Location("block/template_farmland")
		val TEMPLATE_FIRE_FLOOR = Location("block/template_fire_floor")
		val TEMPLATE_FIRE_SIDE = Location("block/template_fire_side")
		val TEMPLATE_FIRE_SIDE_ALT = Location("block/template_fire_side_alt")
		val TEMPLATE_FIRE_UP = Location("block/template_fire_up")
		val TEMPLATE_FIRE_UP_ALT = Location("block/template_fire_up_alt")
		val TEMPLATE_CAMPFIRE = Location("block/template_campfire")
		val TEMPLATE_LANTERN = Location("block/template_lantern")
		val TEMPLATE_HANGING_LANTERN = Location("block/template_hanging_lantern")
		val TEMPLATE_TORCH = Location("block/template_torch")
		val TEMPLATE_TORCH_WALL = Location("block/template_torch_wall")
		val TEMPLATE_PISTON = Location("block/template_piston")
		val TEMPLATE_PISTON_HEAD = Location("block/template_piston_head")
		val TEMPLATE_PISTON_HEAD_SHORT = Location("block/template_piston_head_short")
		val TEMPLATE_SEAGRASS = Location("block/template_seagrass")
		val TEMPLATE_TURTLE_EGG = Location("block/template_turtle_egg")
		val TEMPLATE_TWO_TURTLE_EGGS = Location("block/template_two_turtle_eggs")
		val TEMPLATE_THREE_TURTLE_EGGS = Location("block/template_three_turtle_eggs")
		val TEMPLATE_FOUR_TURTLE_EGGS = Location("block/template_four_turtle_eggs")
		val TEMPLATE_SINGLE_FACE = Location("block/template_single_face")
		val TEMPLATE_CAULDRON_LEVEL1 = Location("block/template_cauldron_level1")
		val TEMPLATE_CAULDRON_LEVEL2 = Location("block/template_cauldron_level2")
		val TEMPLATE_CAULDRON_FULL = Location("block/template_cauldron_full")
		val TEMPLATE_AZALEA = Location("block/template_azalea")
		val TEMPLATE_POTTED_AZALEA_BUSH = Location("block/template_potted_azalea_bush")
		val TEMPLATE_CANDLE = Location("block/template_candle")
		val TEMPLATE_TWO_CANDLES = Location("block/template_two_candles")
		val TEMPLATE_THREE_CANDLES = Location("block/template_three_candles")
		val TEMPLATE_FOUR_CANDLES = Location("block/template_four_candles")
		val TEMPLATE_CAKE_WITH_CANDLE = Location("block/template_cake_with_candle")
		val TEMPLATE_SCULK_SHRIEKER = Location("block/template_sculk_shrieker")
	}
	
	fun <T : Block> generateBlock(
		block: T,
		parent: Identifier = Parents.CUBE,
	) {
		modelGenerator.registerCubeAllModelTexturePool(block)
//		val identifier = RegistryHelper.getId(item)
//		this.generate(
//			ItemModelHandler.ItemModelBuilder(identifier)
//				.setParent(parent)
//				.addTexture(identifier.path, prefix = "")
//		)
	}
	
}